<?xml version="1.0" encoding="UTF-8"?>

<launch>

	<arg name="debug" default="false"/>
	<arg name="gui" default="true"/>
	<arg name="pause" default="false"/>
	<arg name="world" default="$(find agv_nav)/gazebo/worlds/warehouse_final.world"/>
	<arg name="map_file" default="/home/dhagash/ga.yaml"/>

	<!--Turtlebot Parameters-->
	<arg name="base"       value="$(optenv TURTLEBOT_BASE create)"/> <!-- create, roomba -->
    <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS circles	)"/>  <!-- circles, hexagons -->
    <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR hokuyo)"/>  <!-- kinect, asus_xtion_pro -->
    
    <!-- Initial Position of Robot inside Gazebo -->
	<arg name="x_pos" default="-4.321660"/>
	<arg name="y_pos" default="9.016260"/>
	<arg name="z_pos" default="-0.001131"/>
	<arg name="yaw" default="0.0"/>
	<arg name="pitch" default="0.0"/>
	<arg name="roll" default="0.0"/>


	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world)"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg pause)"/>
		<arg name="headless" value="false"/>
		<arg name="use_sim_time" value="true"/>
	</include>

  	
  	<!--Launching Turtlebot-->

  	<arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'"/>
  	<param name="robot_description" command="$(arg urdf_file)"/>

  	<node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -P $(arg pitch) -R $(arg roll) -unpause -urdf -param robot_description -model mobile_base"/>

  	<!-- Velocity muxer -->
  	<node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
 	<node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    	<param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    	<remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  	</node>

  	<!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  	<include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>

  	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    	<param name="publish_frequency" type="double" value="30.0" />
  	</node>

  	<!-- Fake laser -->
  	<node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  	<node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
    	    args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    	<param name="scan_height" value="10"/>
    	<param name="output_frame_id" value="/camera_depth_frame"/>
    	<param name="range_min" value="0.45"/>
    	<remap from="image" to="/camera/depth/image_raw"/>
    	<remap from="scan" to="/kinect_scan"/>
  	</node>

  	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    	<param name="frame_id" value="/map"/>
  	</node>

  	<include file="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml">
    	<arg name="scan_topic" value="laserscan"/>
    	<arg name="use_map_topic" value="true"/>
    	<arg name="initial_pose_x" value="$(arg x_pos)"/>
    	<arg name="initial_pose_y" value="$(arg y_pos)"/>
    	<arg name="initial_pose_a" value="$(arg yaw)"/>
  	</include>


  	<!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_stage)/rviz/robot_navigation.rviz"/-->
  	<!--node pkg="rviz" type="rviz" name="rviz" output="screen"/-->

</launch>
